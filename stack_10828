#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define SIZE 10001

typedef struct Stack {
	int stack[SIZE];
	int top;
}Stack;

int push(Stack* s, int data) {
	s->top++;
	s->stack[s->top] = data;
}

int pop(Stack* s) {
	if (s->top == 0) {
		return -1;
	}
	else {
		int re = s->stack[s->top];
		s->top--;
		return re;
	}
}

int size(Stack* s) {
	return s->top;
}

int empty(Stack* s) {
	if (s->top == 0) return 1;
	else return 0;
}

int top(Stack* s) {
	if (s->top == 0) return -1;
	else return s->stack[s->top];
}

int main() {
	int N, data;
	Stack s;
	s.top = 0;
	scanf("%d", &N);
	for (int i = 0; i < N; i++) {
		char cmd[10];
		scanf("%s", cmd);
		if (strcmp(cmd, "push") == 0) {
			scanf("%d", &data);
			push(&s, data);
		}
		else if (strcmp(cmd, "pop") == 0) {
			printf("%d\n", pop(&s));
		}
		else if (strcmp(cmd, "size") == 0) {
			printf("%d\n", size(&s));
		}
		else if (strcmp(cmd, "empty") == 0) {
			printf("%d\n", empty(&s));
		}
		else if (strcmp(cmd, "top") == 0) {
			printf("%d\n", top(&s));
		}
	}
	return 0;
}
